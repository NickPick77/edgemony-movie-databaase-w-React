{"version":3,"file":"static/js/add.6bb52571.chunk.js","mappings":"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","sources":["webpack://edgemony-movie-db/./src/components/AddMovieForm/styles.module.scss?5880","components/AddMovieForm/index.jsx","webpack://edgemony-movie-db/./src/components/Modal/styles.module.scss?81d3","components/Modal/index.jsx","webpack://edgemony-movie-db/./src/pages/AddMovie/styles.module.scss?5bde","pages/AddMovie/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"AddMovieForm_form\":\"styles_AddMovieForm_form__oQbox\"};","import { useState } from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport { POST, PUT } from \"../../utils/utils\";\nimport styles from \"./styles.module.scss\";\n\nexport function AddMovieForm({ setModalVisibility, callType, text }) {\n    const [title, setTitle] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\");\n    const [genres, setGenrese] = useState(\"\");\n\n    let location = useLocation();\n    const movieId = location.pathname.split(\"/\").reverse()[0];\n\n    const unStringifyGenres = (genres) => genres.split(\",\");\n\n    const addNewMovie = (e) => {\n        e.preventDefault();\n\n        if (callType === \"POST\") {\n            POST(\"\", {\n                title,\n                year,\n                imgUrl,\n                genres: unStringifyGenres(genres),\n                description,\n            });\n\n            setModalVisibility(true);\n        } else {\n            PUT(movieId, {\n                title,\n                year,\n                imgUrl,\n                genres: unStringifyGenres(genres),\n                description,\n            });\n            setModalVisibility(true);\n        }\n    };\n\n\n    return (\n        <form onSubmit={addNewMovie} className={styles.AddMovieForm_form}>\n            <label htmlFor=\"title\">Title</label>\n            <input\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                required\n            />\n            <label htmlFor=\"\">Year</label>\n            <input\n                value={year}\n                onChange={(e) => setYear(e.target.value)}\n                type=\"text\"\n                id=\"year\"\n                name=\"year\"\n                required\n            />\n            <label htmlFor=\"\">Description</label>\n            <input\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                type=\"text\"\n                id=\"description\"\n                name=\"year\"\n                required\n            />\n            <label htmlFor=\"imgUrl\">Image Url</label>\n            <input\n                value={imgUrl}\n                onChange={(e) => setImgUrl(e.target.value)}\n                type=\"text\"\n                id=\"imgUrl\"\n                name=\"imgUrl\"\n                required\n            />\n            <label htmlFor=\"genres\">Genres</label>\n            <input\n                value={genres}\n                onChange={(e) => setGenrese(e.target.value)}\n                type=\"text\"\n                id=\"genres\"\n                name=\"genres\"\n                required\n            />\n            <input type=\"submit\" value={text} />\n        </form>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"Modal_Alert\":\"styles_Modal_Alert__Lkt4h\",\"green\":\"styles_green__n2xx4\",\"blue\":\"styles_blue__t4+e6\",\"red\":\"styles_red__u0Klw\",\"Modal_Confirm\":\"styles_Modal_Confirm__juqbN\",\"Modal_Container\":\"styles_Modal_Container__wUzgi\",\"Button_Container\":\"styles_Button_Container__ribEm\",\"Modal_Button_Span\":\"styles_Modal_Button_Span__hxZP4\",\"Modal_Button_Confirm\":\"styles_Modal_Button_Confirm__gsFdY\",\"Modal_Button_Undo\":\"styles_Modal_Button_Undo__zi7kx\"};","import styles from \"./styles.module.scss\";\n\nexport function Modal({ isVisible, setVisibility, colorClass, modalInput, DeleteMovieData, deleteId }) {\n\n    //console.log(modalInput.yes)\n    const color = (colorClass === \"green\") ? styles.green : (colorClass === \"blue\") ? styles.blue : (colorClass === \"red\") ? styles.red : \"\"\n    return (\n        <>\n            {modalInput.text.length > 0 ?\n                isVisible && (\n                    <div className={`${styles.Modal_Alert} ${colorClass ? color : \"\"}`}>\n                        <p className={styles.Modal_paragraph}>{modalInput.text}</p>\n                    </div>\n                ) :\n                isVisible && (\n                    <div className={styles.Modal_Confirm}>\n                        <div className={styles.Modal_Container}>\n                            <p>Vuoi davvero eliminare il Film?</p>\n                            <div className={styles.Button_Container}>\n                                <button\n                                    className={styles.Modal_Button_Confirm}\n                                    onClick={(() => DeleteMovieData(deleteId))}\n                                >\n                                    <span className={styles.Modal_Button_Span}>{modalInput.yes}</span>\n                                </button>\n                                <button\n                                    className={styles.Modal_Button_Undo}\n                                    onClick={(() => setVisibility(false))}\n                                >\n                                    <span className={styles.Modal_Button_Span}>{modalInput.no}</span>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n        </>\n    );\n}\n//${colorClass ? color : \"\"}","// extracted by mini-css-extract-plugin\nexport default {\"AddMovie_section\":\"styles_AddMovie_section__ubWBx\"};","import { useState, useEffect } from \"react\";\nimport { AddMovieForm } from \"./../../components/AddMovieForm\";\nimport { Modal } from \"./../../components/Modal\";\nimport styles from \"./styles.module.scss\";\n\n\n\nexport default function AddMovie({ modalInput, setModalInput }) {\n    const [modalVisibility, setModalVisibility] = useState(false);\n\n    useEffect(() => {\n        setModalInput({ text: \"Un nuovo film Ã¨ stato aggiunto alla lista!\" })\n        setTimeout(() => {\n            setModalVisibility(false);\n        }, 3000);\n        //eslint-disable-next-line\n    }, [modalVisibility]);\n\n\n\n    return (\n        <>\n            <section className={styles.AddMovie_section}>\n                <h1>Add a new movie</h1>\n                <AddMovieForm setModalVisibility={setModalVisibility} callType=\"POST\" text=\"Add Movie!\" />\n                <Modal\n                    modalInput={modalInput}\n                    isVisible={modalVisibility}\n                    colorClass={\"green\"}\n                />\n            </section>\n        </>\n    )\n}"],"names":["AddMovieForm","setModalVisibility","callType","text","useState","title","setTitle","year","setYear","description","setDescription","imgUrl","setImgUrl","genres","setGenrese","movieId","useLocation","pathname","split","reverse","unStringifyGenres","onSubmit","e","preventDefault","POST","PUT","className","styles","htmlFor","value","onChange","target","type","id","name","required","Modal","isVisible","setVisibility","colorClass","modalInput","DeleteMovieData","deleteId","color","length","onClick","yes","no","AddMovie","setModalInput","modalVisibility","useEffect","setTimeout"],"sourceRoot":""}