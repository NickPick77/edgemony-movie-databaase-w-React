{"version":3,"file":"static/js/home.c5186608.chunk.js","mappings":"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","sources":["webpack://edgemony-movie-db/./src/components/CardItem/styles.module.scss?af11","components/CardItem/index.jsx","webpack://edgemony-movie-db/./src/components/Modal/styles.module.scss?81d3","components/Modal/index.jsx","webpack://edgemony-movie-db/./src/components/CardList/styles.module.scss?6b93","components/CardList/index.jsx","components/SearchBar/styles.module.scss","components/SearchBar/index.jsx","webpack://edgemony-movie-db/./src/pages/HomePage/styles.module.scss?15f7","pages/HomePage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CardItem\":\"styles_CardItem__QIsX0\",\"genre\":\"styles_genre__WQaj9\"};","\nimport { Link } from 'react-router-dom';\nimport styles from './styles.module.scss';\n\n\nexport function CardItem({ cardData, setModalVisibility, setMovieData, setModalInput }) {\n\n    const setDeleteId = () => {\n        setModalInput({ text: \"\", yes: \"yes\", no: \"no\" })\n        setModalVisibility(true);\n        setMovieData(cardData.id);\n    }\n\n    return (\n        <div className={styles.CardItem}  >\n            <button value={cardData.id} onClick={() => setDeleteId()}>❌</button>\n            <Link to={`/edit-movie/${cardData.id}`}>\n                <h2>{cardData.title}</h2>\n            </Link>\n            <p>{cardData.year}</p>\n            <img src={cardData.img || cardData.poster} alt={cardData.title} />\n            <p>{cardData.description}</p>\n            <div className={styles.genre}>\n                <ul>\n                    {cardData.genres &&\n                        cardData.genres.map((genre, i) => (\n                            <li key={i}>{genre}</li>\n                        ))}\n                </ul>\n            </div>\n\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal_Alert\":\"styles_Modal_Alert__Lkt4h\",\"green\":\"styles_green__n2xx4\",\"blue\":\"styles_blue__t4+e6\",\"red\":\"styles_red__u0Klw\",\"Modal_Confirm\":\"styles_Modal_Confirm__juqbN\",\"Button_Container\":\"styles_Button_Container__ribEm\",\"Modal_Button_Span\":\"styles_Modal_Button_Span__hxZP4\",\"Modal_Button_Confirm\":\"styles_Modal_Button_Confirm__gsFdY\",\"Modal_Button_Undo\":\"styles_Modal_Button_Undo__zi7kx\"};","import styles from \"./styles.module.scss\";\n\nexport function Modal({ isVisible, setVisibility, colorClass, modalInput, DeleteMovieData, deleteId }) {\n\n    //console.log(modalInput.yes)\n    const color = (colorClass === \"green\") ? styles.green : (colorClass === \"blue\") ? styles.blue : (colorClass === \"red\") ? styles.red : \"\"\n    return (\n        <>\n            {modalInput.text.length > 0 ?\n                isVisible && (\n                    <div className={`${styles.Modal_Alert} ${colorClass ? color : \"\"}`}>\n                        <p className={styles.Modal_paragraph}>{modalInput.text}</p>\n                    </div>\n                ) :\n                isVisible && (\n                    <div className={styles.Modal_Confirm}>\n                        <p>Vuoi davvero eliminare il Film?</p>\n                        <div className={styles.Button_Container}>\n                            <button\n                                className={styles.Modal_Button_Confirm}\n                                onClick={(() => DeleteMovieData(deleteId))}\n                            >\n                                <span className={styles.Modal_Button_Span}>{modalInput.yes}</span>\n                            </button>\n                            <button\n                                className={styles.Modal_Button_Undo}\n                                onClick={(() => setVisibility(false))}\n                            >\n                                <span className={styles.Modal_Button_Span}>{modalInput.no}</span>\n                            </button>\n                        </div>\n                    </div>\n                )}\n        </>\n    );\n}\n//${colorClass ? color : \"\"}","// extracted by mini-css-extract-plugin\nexport default {\"CardList_container\":\"styles_CardList_container__FeSwj\"};","import { useState, useEffect } from 'react';\nimport { CardItem } from '../CardItem';\nimport { GET } from '../../utils/utils';\nimport styles from './styles.module.scss';\n\nexport function CardList({ searchInput, modalVisibility, setModalVisibility, setMovieData, update, setModalInput }) {\n    //const [modalVisibility, setModalVisibility] = useState(false);\n    const [moviesData, setMoviesData] = useState([]);\n\n\n    // useEffect(() => {\n    //\n    //     GET().then((movie) => setMoviesData(movie))\n    //\n    // }, []);\n    useEffect(() => {\n\n        GET().then((movie) => {\n            setMoviesData(movie);\n        })\n\n\n    }, [update]);\n\n    return (\n        <div className={styles.CardList} >\n            <ul className={styles.CardList_container}>\n                {moviesData &&\n                    moviesData.filter((movie) => movie.title.toLowerCase().trim().includes(searchInput))\n                        .map((movie) => (\n                            <CardItem\n                                cardData={movie}\n                                key={movie.id}\n                                modalVisibility={modalVisibility}\n                                setModalVisibility={setModalVisibility}\n                                setMovieData={setMovieData}\n                                setModalInput={setModalInput}\n                            />\n                        ))}\n            </ul>\n        </div>\n\n    )\n\n}","// extracted by mini-css-extract-plugin\nexport default {};","import styles from \"./styles.module.scss\"\n\nexport function SearchBar({ searchResult, searchInput }) {\n\n\n    return (\n        <section className={styles.search_container}>\n            <label htmlFor={styles.search_bar}>Cerca una città</label>\n            <input\n                type=\"text\"\n                id=\"search-bar\"\n                value={searchInput}\n                onChange={(e) => searchResult(e.target.value)}\n            />\n        </section>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"HomePage_section\":\"styles_HomePage_section__4kbh+\"};","import { useState } from \"react\";\n\nimport { CardList } from \"../../components/CardList\";\nimport { Modal } from \"../../components/Modal\";\nimport { SearchBar } from \"../../components/SearchBar\";\nimport styles from \"./styles.module.scss\";\n\n\nexport default function HomePage({ DeleteMovieData, modalInput, setModalInput, modalVisibility, setModalVisibility, movieData, setMovieData, update }) {\n\n    //const [update, setUpdate] = useState(false)\n\n    const [searchInput, setSearchInput] = useState(\"\")\n\n\n\n    return (\n        <>\n            <section className={styles.HomePage_section}>\n                <SearchBar searchResult={setSearchInput} searchInput={searchInput} />\n\n                <CardList\n                    searchInput={searchInput}//pass input data to Cardlist components\n                    setModalVisibility={setModalVisibility}// pass the setState for modal visibility\n                    setMovieData={setMovieData}\n                    update={update}//pass state value for new GET request\n                    setModalInput={setModalInput}\n\n                />\n                <Modal\n                    modalInput={modalInput}\n                    isVisible={modalVisibility}\n                    setVisibility={setModalVisibility}\n                    colorClass={\"red\"}\n                    DeleteMovieData={DeleteMovieData}\n                    deleteId={movieData}\n                />\n\n            </section>\n        </>\n    )\n}"],"names":["CardItem","cardData","setModalVisibility","setMovieData","setModalInput","className","styles","value","id","onClick","text","yes","no","to","title","year","src","img","poster","alt","description","genres","map","genre","i","Modal","isVisible","setVisibility","colorClass","modalInput","DeleteMovieData","deleteId","color","length","CardList","searchInput","modalVisibility","update","useState","moviesData","setMoviesData","useEffect","GET","then","movie","filter","toLowerCase","trim","includes","SearchBar","searchResult","htmlFor","type","onChange","e","target","HomePage","movieData","setSearchInput"],"sourceRoot":""}